name: Build and push nodejs app to artifactory

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: 
      id-token: write
    env:
      JFROG_CLI_BUILD_NAME: Devops-Tuto-Node-build
      SONAR_REPORT_TASK_FILE: ./.scannerwork/report-task.txt
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: jfrog/setup-jfrog-cli@v4
        env:
            JF_URL: https://trialk033s3.jfrog.io 
            JF_ENV_1: ${{ secrets.JF_SECRET_ENV_1 }}
        with:
            oidc-provider-name: setup-jfrog-cli

      - name: Set up nodejs
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm install

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SQ_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Collect SonarQube report infos
        run: |
          echo "SONAR_CE_TASK_ID=$(awk -F '=' '/^ceTaskId/ { print $2 }' ${SONAR_REPORT_TASK_FILE})" >> $GITHUB_ENV
          echo "SONAR_CE_TASK_URL=$(awk -F '=' '/^ceTaskUrl/ { print $2 }' ${SONAR_REPORT_TASK_FILE})" >> $GITHUB_ENV          

      - name: Upload build infos
        run: |
          jf rt bce
          jf rt bag
          jf rt bp
      